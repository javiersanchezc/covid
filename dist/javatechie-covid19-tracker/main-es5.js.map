{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/covid19/covid19.component.html","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/covid19/covid19.component.css","./src/app/covid19/covid19.component.ts","./src/app/javatechie-covid19.service.ts","./src/environments/environment.ts","./src/main.ts","fs (ignored)","crypto (ignored)","stream (ignored)"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;ACZA,8C;;;;;;;;;;;ACAA,qCAAqC,MAAM,QAAQ,MAAM,kLAAkL,MAAM,mEAAmE,6BAA6B,4BAA4B,MAAM,kEAAkE,6BAA6B,0BAA0B,MAAM,mEAAmE,6BAA6B,2BAA2B,MAAM,kEAAkE,6BAA6B,mkBAAmkB,iBAAiB,wOAAwO,eAAe,+OAA+O,oBAAoB,2OAA2O,gBAAgB,wPAAwP,qBAAqB,sPAAsP,mBAAmB,kPAAkP,gBAAgB,sPAAsP,kBAAkB,6PAA6P,4BAA4B,+PAA+P,6BAA6B,qPAAqP,eAAe,+PAA+P,4BAA4B,gJAAgJ,2BAA2B,2H;;;;;;;;;;;ACA1zI,wBAAwB,oBAAoB,KAAK,+CAA+C,mQ;;;;;;;;;;;;;;;;;ACAtD;AAS1C,IAAM,YAAY,GAAsB;IACtC,EAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAC;IAC5D,EAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAC;IAC3D,EAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAC;IAC3D,EAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAC;IAC9D,EAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAC;IACzD,EAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,EAAC;IAC3D,EAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,EAAC;IAC7D,EAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,EAAC;IAC3D,EAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,EAAC;IAC7D,EAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,EAAC;CAC5D,CAAC;AAOF;IALA;QAME,UAAK,GAAG,4BAA4B,CAAC;QACrC,qBAAgB,GAAa,CAAC,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QACtE,eAAU,GAAG,YAAY,CAAC;IAC5B,CAAC;IAJY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,uIAAmC;;SAEpC,CAAC;OACW,YAAY,CAIxB;IAAD,mBAAC;CAAA;AAJwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BiC;AACjB;AACc;AACR;AACgC;AAChB;AACP;AACO;AACV;AACE;AACF;AACO;AACH;AAsBzD;IAAA;IAAyB,CAAC;IAAb,SAAS;QApBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,2EAAgB;aACjB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,4FAAuB;gBACvB,sEAAc;gBACd,qEAAgB;gBAChB,8EAAkB;gBAClB,oEAAa;gBACb,qEAAkB;gBAClB,uEAAc;gBACd,0EAAsB;gBACtB,yEAAe;aAChB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AClCtB,wBAAwB,oBAAoB,KAAK,+BAA+B,qBAAqB,OAAO,+CAA+C,2Y;;;;;;;;;;;;;;;;;;;;;ACA9F;AACY;AAEZ;AACF;AACV;AAQjD;IASE,0BAAoB,OAAgC;QAAhC,YAAO,GAAP,OAAO,CAAyB;QALpD,qBAAgB,GAAa,CAAC,SAAS,EAAC,OAAO,EAAC,YAAY,EAAC,QAAQ,EAAC,aAAa,EAAC,WAAW,EAAC,QAAQ,EAAC,UAAU,EAAC,oBAAoB,EAAC,qBAAqB,EAAC,OAAO,EAAC,oBAAoB,CAAC,CAAC;QAC7L,eAAU,GAAG,IAAI,0EAAkB,CAAiB,IAAI,CAAC,YAAY,CAAC,CAAC;IAIf,CAAC;IAEzD,mCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAC,IAAI,CAAC,IAAI,CAAC;QAC/B,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAEM,wCAAa,GAApB;QAAA,iBAGC;QAFC,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC;QACzC,IAAI,CAAC,SAAS,CAAC,gBAAM,IAAE,YAAI,CAAC,UAAU,CAAC,IAAI,GAAC,MAA2B,EAAhD,CAAgD,CAAC;IAC1E,CAAC;IAED,sCAAW,GAAX,UAAY,WAAmB;QAC7B,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC5D,CAAC;;gBAf2B,oFAAwB;;IAFX;QAAxC,+DAAS,CAAC,wEAAY,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC;uDAAyB;IAC7B;QAAnC,+DAAS,CAAC,8DAAO,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC;kDAAe;IARvC,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,uJAAuC;;SAExC,CAAC;OACW,gBAAgB,CA0B5B;IAAD,uBAAC;CAAA;AA1B4B;;;;;;;;;;;;;;;;;;;ACbc;AACO;AAKlD;IAEE,kCAAoB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;IAAI,CAAC;IAGjC,iDAAc,GAArB;QACA,OAAQ,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,wCAAwC,CAAC,CAAC;IAChE,CAAC;;gBALwB,+DAAU;;IAFxB,wBAAwB;QAHpC,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;OACW,wBAAwB,CAQpC;IAAD,+BAAC;CAAA;AARoC;;;;;;;;;;;;;ACNrC;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ACXpC,e;;;;;;;;;;;ACAA,e;;;;;;;;;;;ACAA,e","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<app-covid19></app-covid19>\"","module.exports = \"<div></div>\\n&nbsp;&nbsp;\\n&nbsp;&nbsp;<mat-form-field>\\n  <mat-label>Filter</mat-label>\\n  <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Ex. ium\\\">\\n</mat-form-field>\\n\\n<div>\\n\\n  &nbsp;&nbsp;<button mat-raised-button  (click)=\\\"exporter.exportTable('xlsx', {fileName:'javatechiecovid19'})\\\">Excel</button>\\n  &nbsp;&nbsp;<button mat-raised-button  (click)=\\\"exporter.exportTable('csv', {fileName:'javatechiecovid19'})\\\">Csv</button>\\n  &nbsp;&nbsp;<button mat-raised-button  (click)=\\\"exporter.exportTable('json', {fileName:'javatechiecovid19'})\\\">Json</button>\\n  &nbsp;&nbsp;<button mat-raised-button  (click)=\\\"exporter.exportTable('txt', {fileName:'javatechiecovid19'})\\\">Txt</button>\\n</div>\\n<div>.</div>\\n<div></div>\\n<div class=\\\"mat-elevation-z8\\\">\\n<table mat-table matTableExporter [dataSource]=\\\"dataSource\\\" #exporter=\\\"matTableExporter\\\" [hiddenColumns]=\\\"[0]\\\" matSort>\\n\\n    <!--- Note that these columns can be defined in any order.\\n          The actual rendered columns are set as a property on the row definition\\\" -->\\n  \\n    <!-- Position Column -->\\n    <ng-container matColumnDef=\\\"country\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Country Name </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.country}} </td>\\n    </ng-container>\\n  \\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"cases\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Total Cases </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.cases}} </td>\\n    </ng-container>\\n  \\n    <!-- Weight Column -->\\n    <ng-container matColumnDef=\\\"todayCases\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Today Cases </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.todayCases}} </td>\\n    </ng-container>\\n  \\n    <!-- Symbol Column -->\\n    <ng-container matColumnDef=\\\"deaths\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Total Death </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.deaths}} </td>\\n    </ng-container>\\n  \\n     <!-- Position Column -->\\n     <ng-container matColumnDef=\\\"todayDeaths\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Today Death </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.todayDeaths}} </td>\\n      </ng-container>\\n    \\n      <!-- Name Column -->\\n      <ng-container matColumnDef=\\\"recovered\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Recovered </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.recovered}} </td>\\n      </ng-container>\\n    \\n      <!-- Weight Column -->\\n      <ng-container matColumnDef=\\\"active\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Active </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.active}} </td>\\n      </ng-container>\\n    \\n      <!-- Symbol Column -->\\n      <ng-container matColumnDef=\\\"critical\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Critical </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.critical}} </td>\\n      </ng-container>\\n\\n       <!-- Position Column -->\\n    <ng-container matColumnDef=\\\"casesPerOneMillion\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Cases/1M </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.casesPerOneMillion}} </td>\\n      </ng-container>\\n    \\n      <!-- Name Column -->\\n      <ng-container matColumnDef=\\\"deathsPerOneMillion\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Death/1M </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.deathsPerOneMillion}} </td>\\n      </ng-container>\\n    \\n      <!-- Weight Column -->\\n      <ng-container matColumnDef=\\\"tests\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Total test </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.tests}} </td>\\n      </ng-container>\\n    \\n      <!-- Symbol Column -->\\n      <ng-container matColumnDef=\\\"testsPerOneMillion\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Test/1M </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.testsPerOneMillion}} </td>\\n      </ng-container>\\n      \\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n  \\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\n</div>\"","module.exports = \"table{\\r\\n    width: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0FBQ2YiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxle1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn0iXX0= */\"","import { Component } from '@angular/core';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'javatechie-covid19-tracker';\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = ELEMENT_DATA;\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {MatTableModule} from '@angular/material/table';\t\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { Covid19Component } from './covid19/covid19.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatFormFieldModule} from '@angular/material';\nimport { MatTableExporterModule } from 'mat-table-exporter';\nimport {MatButtonModule} from '@angular/material/button';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    Covid19Component\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatTableModule,\n    HttpClientModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatTableExporterModule,\n    MatButtonModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"table{\\r\\n    width: 100%;\\r\\n}\\r\\nth.mat-sort-header-sorted {\\r\\n    color: black;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY292aWQxOS9jb3ZpZDE5LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0FBQ2Y7QUFDQTtJQUNJLFlBQVk7RUFDZCIsImZpbGUiOiJzcmMvYXBwL2NvdmlkMTkvY292aWQxOS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGV7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG50aC5tYXQtc29ydC1oZWFkZXItc29ydGVkIHtcclxuICAgIGNvbG9yOiBibGFjaztcclxuICB9Il19 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { JavatechieCovid19Service } from '../javatechie-covid19.service';\nimport { CountryReports } from 'src/countryReports';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\n\n\n@Component({\n  selector: 'app-covid19',\n  templateUrl: './covid19.component.html',\n  styleUrls: ['./covid19.component.css']\n})\nexport class Covid19Component implements OnInit {\n  \n\n  ELEMENT_DATA! : CountryReports[];\n  displayedColumns: string[] = ['country','cases','todayCases','deaths','todayDeaths','recovered','active','critical','casesPerOneMillion','deathsPerOneMillion','tests','testsPerOneMillion'];\n  dataSource = new MatTableDataSource<CountryReports>(this.ELEMENT_DATA);\n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  constructor(private service:JavatechieCovid19Service) { }\n\n  ngOnInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort=this.sort;\n    this.getAllReports();\n  }\n\n  public getAllReports(){\n    let resp = this.service.covid19Reports();\n    resp.subscribe(report=>this.dataSource.data=report  as CountryReports[])\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JavatechieCovid19Service {\n\n  constructor(private http:HttpClient) { }\n\n\n  public covid19Reports(){\n  return  this.http.get(\"https://corona.lmao.ninja/v2/countries\");\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":""}